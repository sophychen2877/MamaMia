#!/bin/python3

import math
import os
import random
import re
import sys

#list out all the possible magic squares for n=3
squares =[[[8,3,4],[1,5,9],[6,7,2]],\
[[6,7,2],[1,5,9],[8,3,4]],\
[[4,9,2],[3,5,7],[8,1,6]],\
[[8,1,6],[3,5,7],[4,9,2]],\
[[6,1,8],[7,5,3],[2,9,4]],\
[[2,9,4],[7,5,3],[6,1,8]],\
[[2,7,6],[9,5,1],[4,3,8]],\
[[4,3,8],[9,5,1],[2,7,6]]]

#concatenante lists of minilists and form a main list
def concat_list(ls):
    result = []
    for i in ls:
        result +=i
    return result

#compute sum of all changes against all magic square scenarios then find the minimum result 
def formingMagicSquare(s):  
    result = []
    n = concat_list(s)
    for sq in squares:
        m = concat_list(sq)
        result.append(sum([abs(m[i]-n[i]) for i in range(9)]))
    return min(result)

#main method
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = []

    for _ in range(3):
        s.append(list(map(int, input().rstrip().split())))

    result = formingMagicSquare(s)

    fptr.write(str(result) + '\n')

    fptr.close()
